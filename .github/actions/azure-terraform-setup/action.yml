name: "Terraform Setup (Azure OIDC)"
description: "Shared Terraform init and environment setup using Azure OIDC"

inputs:
  tf_version:
    required: true
  github_token_pat:
    required: true
  azure_client_id:
    required: true
  azure_tenant_id:
    required: true
  azure_subscription_id:
    required: true
  tf_storage_account:
    required: true
  tf_container_name:
    required: true
  tf_key:
    required: true
  working_directory:
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure Git credentials for Terraform modules
      run: |
        git config --global url."https://x-access-token:${{ inputs.github_token_pat }}@github.com/".insteadOf "https://github.com/"
      shell: bash

    - name: Azure login (OIDC)
      uses: azure/login@v2
      with:
        client-id: ${{ inputs.azure_client_id }}
        tenant-id: ${{ inputs.azure_tenant_id }}
        subscription-id: ${{ inputs.azure_subscription_id }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.tf_version }}

    - name: Terraform Init (AzureRM)
      run: |
        terraform init -input=false \
          -backend-config="resource_group_name=InfrastructureAsCode" \
          -backend-config="use_azuread_auth=true" \
          -backend-config="storage_account_name=${{ inputs.tf_storage_account }}" \
          -backend-config="container_name=${{ inputs.tf_container_name }}" \
          -backend-config="key=${{ inputs.tf_key }}" \
          -backend-config="subscription_id=${{ inputs.azure_subscription_id }}" \
          -backend-config="tenant_id=${{ inputs.azure_tenant_id }}"
      shell: bash
      working-directory: ${{ inputs.working_directory }}
